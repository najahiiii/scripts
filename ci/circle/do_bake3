#!/usr/bin/env bash
echo "Cloning dependencies"
git clone https://github.com/najahiiii/AnyKernel3.git -b asus-unified --depth=1 AnyKernel
git clone https://github.com/NusantaraDevs/clang -b ndk-clang-10 --depth=1 clang
git clone https://github.com/KudProject/arm-linux-androideabi-4.9 --depth=1 gcc32
git clone https://github.com/KudProject/aarch64-linux-android-4.9 --depth=1 gcc
mkdir .signer && curl -sLo .signer/zipsigner-3.0.jar https://raw.githubusercontent.com/najahiiii/Noob-Script/noob/bin/zipsigner-3.0.jar
echo "Done"
if [ "$is_test" = true ]; then
     echo "Its alpha test build"
     unset chat_id
     unset token
     export chat_id=${my_id}
     export token=${nToken}
     export YEET=-Alpha
else
     echo "Its beta release build"
fi
KERNEL_DIR=$(pwd)
PATH="${KERNEL_DIR}/clang/bin:${KERNEL_DIR}/gcc/bin:${KERNEL_DIR}/gcc32/bin:${PATH}"
IMAGE=$(pwd)/out/arch/arm64/boot/Image.gz
SHA=$(echo "$CIRCLE_SHA1" | cut -c 1-8)
START3=$(date +"%s")
export ARCH=arm64
export KBUILD_BUILD_USER=Najahi
export KBUILD_BUILD_HOST=NusantaraDevs
git config --global user.email "najahiii@outlook.co.id"
git config --global user.name "Najahiiii"
# Push kernel to channel
function push() {
    cd .signer || exit 1
    ZIP=$(echo *.zip)
    curl -F document=@"$ZIP" "https://api.telegram.org/bot$token/sendDocument" \
        -F chat_id="$chat_id" \
        -F "disable_web_page_preview=true" \
        -F "parse_mode=html" \
        -F caption="Build took $(($DIFF3 / 60)) minute(s) and $(($DIFF3 % 60)) second(s). | For <b>ASUS ZENFONE MAX PRO M1 (X00T/D) Android 8.1 - 10.0 non-SAR/SAR</b> | <b>$(clang --version | head -n 1 | perl -pe 's/\(https.*?\)//gs' | sed -e 's/  */ /g')</b>"
}
# Fin Error
function finerr() {
    curl -s -X POST "https://api.telegram.org/bot$token/sendMessage" \
        -d chat_id="$chat_id" \
        -d "disable_web_page_preview=true" \
        -d "parse_mode=markdown" \
        -d text="Job Baking Chips throw an error(s)"
    exit 1
}
# Compile plox
function compile() {
    make -s -C "$(pwd)" -j"$(nproc)" O=out X00T_defconfig
    make -C "$(pwd)" O=out -j$(nproc) \
                    CC=clang \
                    CLANG_TRIPLE=aarch64-linux-gnu- \
                    CROSS_COMPILE=aarch64-linux-android- \
                    CROSS_COMPILE_ARM32=arm-linux-androideabi-
        if ! [ -a "$IMAGE" ]; then
            finerr
            exit 1
        fi
    cp out/arch/arm64/boot/Image.gz AnyKernel/kernel/
}
# Zipping
function zipping() {
    cd AnyKernel || exit 1
    zip -r9q unsigned.zip * -x LICENSE README.md kernel/placeholder
    mv unsigned.zip ../.signer/
    cd ..
}
# Signer
function signer() {
    cd .signer || exit 1
    TANGGAL3=$(date +'%H%M-%d%m%y')
    if [ "$is_test" = true ]; then
        java -jar zipsigner-3.0.jar \
        unsigned.zip ChipsKernel-Clang-EAS-Alpha-"${TANGGAL3}-${SHA}".zip
        rm unsigned.zip
    else
        java -jar zipsigner-3.0.jar \
        unsigned.zip ChipsKernel-Clang-EAS-"${TANGGAL3}-${SHA}".zip
        rm unsigned.zip
    fi
    cd ..
}
compile
zipping
signer
END3=$(date +"%s")
DIFF3=$(($END3 - $START3))
push
